(function($, undefined) {
	var Foomei_DataTable = function(_settings) {
	    var self = this;
	    self.settings = $.extend({}, $.fn.foomei_datatable.defaults, _settings);
	    
	    var columnNames =new Array();
	    for(var i in self.settings.aoColumns){
		columnNames.push(self.settings.aoColumns[i]["mDataProp"]);
	    }
	    var created = false;
	    var inited = false;
	    
	    this.create = function() {
		if(created) return;
		
		var sortBy = null;
		var sortDir = null;
		if(self.settings.storage) {
		    var iDisplayStart = self.getStorage('iDisplayStart');
		    if(iDisplayStart) self.settings.iDisplayStart = iDisplayStart;
		    var iDisplayLength = self.getStorage('iDisplayLength');
		    if(iDisplayLength) self.settings.iDisplayLength = iDisplayLength;
		    sortBy = self.getStorage('sortBy');
		    sortDir = self.getStorage('sortDir');
		}
		
		if(!sortBy) {
		    sortBy = self.settings.defSortCol || "";
		}
		if(!sortDir) {
		    sortDir = self.settings.defSortDir || "desc";
		}
		
		var iSortCol_0 = null;
		var sSortDir_0 = sortDir;
		for(var i in self.settings.aoColumns){
		    if(self.settings.aoColumns[i]["mDataProp"] == sortBy)
			iSortCol_0 = i;
		}
		
		if(iSortCol_0) self.settings.aaSorting = [[iSortCol_0, sSortDir_0]];
		
		self.dataTable(self.settings);
		
		created = true;
	    }
	    
	    this.ajax = function(url, method, params, success, error, beforeSend, complete) {
		if(!error){
		    error = function (){alert("当前访问出错，可能存在网络原因!");};
		}	
	    	
		$.ajax({
		    url: url,
		    type: method,//提交方式
		    data: params,//输入参数数据
		    dataType: "json",//返回数据的类型
		    beforeSend: beforeSend,
		    success: success,
		    complete: complete,
		    error: error
		});
	    }
	    
	    this.serverData = function(path, aoData, fnCallback, oSettings) {
		if(!inited) {
		  self.init(oSettings);  
		  inited = true;
		}
		
		var params = {};
		for(var i in aoData){
		    params[aoData[i]['name']]=aoData[i]['value'];
		}
		
		//获取排序属性
		params['sortBy'] = columnNames[params['iSortCol_0']];
		params['sortDir'] = params['sSortDir_0'];
		
		params['sSearch'] = $("#sSearch").val();
		
		if(self.settings.appendSearchs) self.settings.appendSearchs(params);
		
		if(self.settings.storage) {
		    for(var key in params){  
				//sEcho//iColumns//sColumns//bRegex//iSortCol_0//sSortDir_0//iSortingCols
				//mDataProp_0//sSearch_0//bRegex_0//bSearchable_0//bSortable_0
				if(!(key == 'sEcho' || key == 'iColumns' || key == 'sColumns' || key == 'bRegex' || key == 'iSortCol_0' || key == 'sSortDir_0' || key == 'iSortingCols'
					|| self.startWith(key, "mDataProp_")|| self.startWith(key, "sSearch_")|| self.startWith(key, "bRegex_")|| self.startWith(key, "bSearchable_")|| self.startWith(key, "bSortable_"))) {
					self.setStorage(key, params[key]);
				}
		    } 
		}
		
		self.ajax(path, self.settings.sAjaxType, params, function (result){
		    fnCallback(result);
		});
	    }
	    
	    this.init = function(oSettings) {
		var filter = $(".dataTables_filter");
		filter.parent().removeClass().addClass("col-xs-10");
		filter.parent().prev().removeClass().addClass("col-xs-2");
			
		if(self.settings.storage) {
		    if(self.settings.initSearchs) self.settings.initSearchs(filter, self.allStorages());
		} else {
		    if(self.settings.initSearchs) self.settings.initSearchs(filter, {});
		}
		
		var searchInput = $("input[aria-controls]");
		var container = $("<div style='float:right'></div>");
		searchInput.parent().replaceWith(container);
		
		var sSearch = null;
		if(self.settings.storage) {
		    sSearch = self.getStorage('sSearch') || "";
		} else {
		    sSearch = "";
		}
		
		if(!self.settings.placeholder) self.settings.placeholder = "--请输入关键字--";
		searchInput = $("<input style='height:28px;vertical-align:middle;' id='sSearch' value='"+sSearch+"' placeholder='"+self.settings.placeholder+"' />");
		container.append(searchInput);
		searchInput.keydown(function(event){
		    if (event.keyCode == "13") 
			oSettings.oApi._fnDraw(oSettings);
		});
		
		var searchButton = $('<button class="btn btn-xs btn-primary" type="button" style="height:28px;">查询</button>');
		searchButton.click(function() {
		    oSettings.oApi._fnDraw(oSettings);
		});
		container.append(searchButton);
	    }
	    
	    this.setStorage = function(_name, _value) {
		sessionStorage.setItem(location.pathname + _name, _value);
	    }
	    
	    this.getStorage = function(_name) {
		return sessionStorage.getItem(location.pathname + _name);
	    }
	    
	    this.allStorages = function() {
		var storages = {};
		for (i = 0; i < sessionStorage.length; i++) {
		    var key = sessionStorage.key(i);
		    if(self.startWith(key, location.pathname)) {
			storages[key.substr(location.pathname.length)] = sessionStorage.getItem(key);
		    }
		}
		return storages;
	    }
	    
	    this.startWith = function(str, prefix) {
		if(str==null || prefix==null)
		    return false;
		if(str.substr(0, prefix.length) == prefix)
		    return true;
		else
		    return false;
	    }
	    
	    this.getData = function(aoData, _name) {
		for(var i in aoData){
		    if(aoData[i]['name'] == _name) return aoData[i]['value'];
		}
		return null;
	    }
	    
	    this.create();

	    return this;
	}
	
	$.fn.foomei_datatable = Foomei_DataTable;
	
	$.fn.foomei_datatable.defaults = {
		oLanguage: {
		    sLengthMenu: "每页_MENU_ 条",
		    sInfo: "显示 第 _START_ 到 _END_条 共 _TOTAL_ 数据",
		    sZeroRecords: "没有匹配的数据",
		    sLoadingRecords: "装载中...",
		    sProcessing: "正在加载...",
		    sSearch: "",
		    sInfoEmpty: "显示 第 0 到 0 条共 0  数据",
		    sInfoFiltered: "",//"(_MAX_总条目筛选)"
		    oPaginate: {
			sFirst: "首页",
			sPrevious: '<i class="ace-icon fa fa-angle-double-left"></i>',
			sNext: '<i class="ace-icon fa fa-angle-double-right"></i>',
			sLast: "末页"
		    }
		},
		aLengthMenu: [10, 20, 50, 100],
		bServerSide: true,
		bProcessing: true,
		sPaginationType: "full_numbers",
		bAutoWidth: false,
		sAjaxDataProp: "entities",
		oSearch: {
		    sSearch: "",
		    bRegex: false,
		    bSmart: true
		},
		iDisplayLength: 20,
		iDisplayStart: 0,
		aaSorting: [],
		storage: false,
		fnServerData: function(path, aoData, fnCallback, oSettings) {
		    this.serverData(path, aoData, fnCallback, oSettings);
		}
	}
	
})(window.jQuery);;