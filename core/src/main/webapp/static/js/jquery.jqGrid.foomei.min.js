(function($) {
	"use strict";
	$.foomei_jgrid = $.foomei_jgrid || {};
	$.extend($.foomei_jgrid, {
		getAccessor : function(obj, expr) {
			var ret, p, prm = [], i;
			if (typeof expr === 'function') {
				return expr(obj);
			}
			ret = obj[expr];
			if (ret === undefined) {
				try {
					if (typeof expr === 'string') {
						prm = expr.split('.');
					}
					i = prm.length;
					if (i) {
						ret = obj;
						while (ret && i--) {
							p = prm.shift();
							ret = ret[p];
						}
					}
				} catch (e) {
				}
			}
			return ret;
		},
		getMethod : function(name) {
			return this.getAccessor($.fn.foomei_JqGrid, name);
		},
		extend : function(methods) {
			$.extend($.fn.foomei_JqGrid, methods);
			if (!this.no_legacy_api) {
				$.fn.extend(methods);
			}
		}
	});

	$.fn.foomei_JqGrid = function(pin) {
		if (typeof pin === 'string') {
			var fn = $.foomei_jgrid.getMethod(pin);
			if (!fn) {
				throw ("jqGrid - No such method: " + pin);
			}
			var args = $.makeArray(arguments).slice(1);
			return fn.apply(this, args);
		}

		var self = this;

		self.settings = $.extend(true, {
			datatype : "json",
			mtype : "get",

			jsonReader : {
				root : "data.content",
				page : "data.number+1",
				total : "data.totalPages",
				records : "data.totalElements",
				repeatitems : false,
				id : "id"
			},
			prmNames : { // 向后台传递的参数
				search : "advance",
				page : "pageNo",
				rows : "pageSize",
				sort : "sortBy",
				order : "sortDir"
			},
			height : 'auto',
			multiselect : true,
			multiboxonly : true,
			rownumbers : true,
			altRows : true,

			scroll : false, // 滚动刷新

			rowNum : 25,
			rowList : [ 10, 25, 50, 100 ],
			viewrecords : true,
			nav : {
				edit : false,
				add : false,
				del : false,
				search : true,
				refresh : true,
				view : false
			},
			autoLoad : true,
			renderCallback: null,
			storage : false
		}, {}, pin || {});

		self.settings.loadComplete = function(result) {
			if (self.jqGrid('getGridParam', 'search')) {
				$(".form-search")[0].reset();
			}

			$(self.selector).closest(".ui-jqgrid-bdiv").children("p.no-data").remove();

			if (!result.success) {
				$(self.selector).closest(".ui-jqgrid-bdiv").append("<p class='bigger-110 bolder center grey no-data'>装载数据出错</p>");
			} else if (result.data.numberOfElements == 0) { // 如果没有记录返回，追加提示信息，删除按钮不可用
				$(self.selector).closest(".ui-jqgrid-bdiv").append("<p class='bigger-110 bolder center grey no-data'>无数据显示</p>");
			}

			var table = this;
			setTimeout(function() {
				// self.resize();

				self.styleCheckbox(table);

				self.updatePagerIcons(table);
				self.enableTooltips(table);

				if(self.settings.renderCallback) {
					self.settings.renderCallback(result);
				}
			}, 0);
		}

		self.settings.beforeRequest = function() {
			if (self.settings.storage) {
				self.setStorage('page', self.jqGrid('getGridParam', 'page'));
				self.setStorage('rowNum', self.jqGrid('getGridParam', 'rowNum'));
				self.setStorage('sortname', self.jqGrid('getGridParam', 'sortname'));
				self.setStorage('sortorder', self.jqGrid('getGridParam', 'sortorder'));
				self.setStorage('search', self.jqGrid('getGridParam', 'search'));
				var postData = self.jqGrid('getGridParam', 'postData');
				for ( var key in postData) {
					// advance//filters//nd//pageNo//pageSize
					// searchField//searchOper//searchString
					// sortBy//sortDir
					if (!(key == 'advance' || key == 'filters' || key == 'nd' || key == 'pageNo' || key == 'pageSize' || key == 'searchField' || key == 'searchOper' || key == 'searchString' || key == 'sortBy' || key == 'sortDir')) {
						self.setStorage('postData.' + key, postData[key]);
					}
				}
			}
		}

		var created = false;

		this.create = function() {
			if (created)
				return;

			if (self.settings.storage) {
				var page = self.getStorage('page');
				if (page)
					self.settings.page = page;
				var rowNum = self.getStorage('rowNum');
				if (rowNum)
					self.settings.rowNum = parseInt(rowNum);
				var sortname = self.getStorage('sortname');
				if (sortname)
					self.settings.sortname = sortname;
				var sortorder = self.getStorage('sortorder');
				if (sortorder)
					self.settings.sortorder = sortorder;
				var search = self.getStorage('search');
				if (search)
					self.settings.search = search;
			}
			
			if (!self.settings.autoLoad) {
				self.settings.datatype = "local";
			}

			var pager = this.prop("id") + "-pager";
			$(this).after('<div id="' + pager + '"></div>');
			self.settings.pager = "#" + pager;

			self.jqGrid(self.settings);
			// self.resize();

			$('.ui-jqgrid-labels th[id*="_cb"]').find('div:first').css('padding-left', '2px').css('height', 'initial');
			$('.ui-jqgrid-labels th[id*="_cb"]').find('input:checkbox').addClass('ace').after('<span class="lbl align-top" />');
			$('.ui-jqgrid-labels').find('th:first').css('width', '24px');

			self.jqGrid('navGrid', self.settings.pager, { // navbar options
				edit : self.settings.nav.edit,
				editicon : 'ace-icon fa fa-pencil blue',
				add : self.settings.nav.add,
				addicon : 'ace-icon fa fa-plus-circle purple',
				del : self.settings.nav.del,
				delicon : 'ace-icon fa fa-trash-o red',
				search : self.settings.nav.search,
				searchicon : 'ace-icon fa fa-search orange',
				refresh : self.settings.nav.refresh,
				refreshicon : 'ace-icon fa fa-refresh green',
				view : self.settings.nav.view,
				viewicon : 'ace-icon fa fa-search-plus grey',
			}, {
				// edit record form
				// closeAfterEdit: true,
				// width: 700,
				recreateForm : true,
				beforeShowForm : function(e) {
					var form = $(e[0]);
					form.closest('.ui-jqdialog').find('.ui-jqdialog-titlebar').wrapInner('<div class="widget-header" />')
					self.style_edit_form(form);
				}
			}, {
				// new record form
				// width: 700,
				closeAfterAdd : true,
				recreateForm : true,
				viewPagerButtons : false,
				beforeShowForm : function(e) {
					var form = $(e[0]);
					form.closest('.ui-jqdialog').find('.ui-jqdialog-titlebar').wrapInner('<div class="widget-header" />')
					self.style_edit_form(form);
				}
			}, {
				// delete record form
				recreateForm : true,
				beforeShowForm : function(e) {
					var form = $(e[0]);
					if (form.data('styled'))
						return false;

					form.closest('.ui-jqdialog').find('.ui-jqdialog-titlebar').wrapInner('<div class="widget-header" />')
					self.style_delete_form(form);

					form.data('styled', true);
				},
				onClick : function(e) {
					// alert(1);
				}
			}, {
				// search form
				recreateForm : true,
				afterShowSearch : function(e) {
					var form = $(e[0]);
					form.closest('.ui-jqdialog').find('.ui-jqdialog-title').wrap('<div class="widget-header" />')
					self.style_search_form(form);
				},
				afterRedraw : function() {
					self.style_search_filters($(this));
				},
				multipleSearch : true,
			/**
			 * multipleGroup:true, showQuery: true
			 */
			}, {
				// view record form
				recreateForm : true,
				beforeShowForm : function(e) {
					var form = $(e[0]);
					form.closest('.ui-jqdialog').find('.ui-jqdialog-title').wrap('<div class="widget-header" />')
				}
			});

			if (self.settings.navAdd) {
				for (var i = 0; i < self.settings.navAdd.length; i++) {
					self.jqGrid('navButtonAdd', self.settings.pager, self.settings.navAdd[i]);
				}
			}

			created = true;
		}

		// this.resize = function() {
		// $(this).jqGrid('setGridWidth', $(".page-content").width());
		// $('.ui-pg-table td:first').removeAttr('style');
		// $('.jqgfirstrow td:first').css('width', '24px');
		// };

		this.style_edit_form = function(form) {
			// update buttons classes
			var buttons = form.next().find('.EditButton .fm-button');
			buttons.addClass('btn btn-sm').find('[class*="-icon"]').hide();// ui-icon,
			// s-icon
			buttons.eq(0).addClass('btn-primary').prepend('<i class="ace-icon fa fa-check"></i>');
			buttons.eq(1).prepend('<i class="ace-icon fa fa-times"></i>')

			buttons = form.next().find('.navButton a');
			buttons.find('.ui-icon').hide();
			buttons.eq(0).append('<i class="ace-icon fa fa-chevron-left"></i>');
			buttons.eq(1).append('<i class="ace-icon fa fa-chevron-right"></i>');
		}

		this.style_delete_form = function(form) {
			var buttons = form.next().find('.EditButton .fm-button');
			buttons.addClass('btn btn-sm btn-white btn-round').find('[class*="-icon"]').hide();// ui-icon,
			// s-icon
			buttons.eq(0).addClass('btn-danger').prepend('<i class="ace-icon fa fa-trash-o"></i>');
			buttons.eq(1).addClass('btn-default').prepend('<i class="ace-icon fa fa-times"></i>')
		}

		this.style_search_filters = function(form) {
			form.find('.opsel').css('vertical-align', 'middle');
			form.find('.delete-rule').val('X');
			form.find('.add-rule').addClass('btn btn-xs btn-primary');
			form.find('.add-group').addClass('btn btn-xs btn-success');
			form.find('.delete-group').addClass('btn btn-xs btn-danger');
		}

		this.style_search_form = function(form) {
			var dialog = form.closest('.ui-jqdialog');
			var buttons = dialog.find('.EditTable')
			buttons.find('.EditButton a[id*="_reset"]').addClass('btn btn-sm btn-info').find('.ui-icon').attr('class', 'ace-icon fa fa-retweet');
			buttons.find('.EditButton a[id*="_query"]').addClass('btn btn-sm btn-inverse').find('.ui-icon').attr('class', 'ace-icon fa fa-comment-o');
			buttons.find('.EditButton a[id*="_search"]').addClass('btn btn-sm btn-purple').find('.ui-icon').attr('class', 'ace-icon fa fa-search');
		}

		this.styleCheckbox = function() {
			$(self).find('input:checkbox').addClass('ace').after('<span class="lbl align-top" />');
		}

		this.updatePagerIcons = function() {
			var replacement = {
				'ui-icon-seek-first' : 'ace-icon fa fa-angle-double-left bigger-140',
				'ui-icon-seek-prev' : 'ace-icon fa fa-angle-left bigger-140',
				'ui-icon-seek-next' : 'ace-icon fa fa-angle-right bigger-140',
				'ui-icon-seek-end' : 'ace-icon fa fa-angle-double-right bigger-140'
			};
			$('.ui-pg-table:not(.navtable) > tbody > tr > .ui-pg-button > .ui-icon').each(function() {
				var icon = $(this);
				var $class = $.trim(icon.attr('class').replace('ui-icon', ''));
				if ($class in replacement)
					icon.attr('class', 'ui-icon ' + replacement[$class]);
			});
		}

		this.enableTooltips = function() {
			$('.navtable .ui-pg-button').tooltip({
				container : 'body'
			});
			$(self).find('.ui-pg-div').tooltip({
				container : 'body'
			});
		}

		this.setStorage = function(_name, _value) {
			sessionStorage.setItem(location.pathname + _name, _value);
		}

		this.getStorage = function(_name) {
			return sessionStorage.getItem(location.pathname + _name);
		}

		this.allStorages = function() {
			var storages = {};
			for (var i = 0; i < sessionStorage.length; i++) {
				var key = sessionStorage.key(i);
				if (self.startWith(key, location.pathname)) {
					storages[key.substr(location.pathname.length)] = sessionStorage.getItem(key);
				}
			}
			return storages;
		}

		this.startWith = function(str, prefix) {
			if (str == null || prefix == null)
				return false;
			if (str.substr(0, prefix.length) == prefix)
				return true;
			else
				return false;
		}

		this.create();

		return self;
	};

	$.foomei_jgrid.extend({
		search : function(newParams) {
			$(this).jqGrid('setGridParam', {
				search : false,
				datatype : "json",
				page : 1,
				postData : newParams
			}).trigger("reloadGrid");
		},
		reload : function() {
			$(this).trigger('reloadGrid');
		},
		resize : function(newParams) {
			var container = newParams === undefined ? ".page-content" : (newParams.container || ".page-content");
			$(this).jqGrid('setGridWidth', $(container).width());
			$('.ui-pg-table').find('td:first').removeAttr('style');
			$('.jqgfirstrow').find('td:first').css('width', '24px');
		},
		getRowData : function(rowId) {
			return $(this).jqGrid('getRowData', rowId);
		},
		getIds : function() {
			return $(this).jqGrid('getGridParam', 'selarrrow');
		}
	});
})(jQuery);
