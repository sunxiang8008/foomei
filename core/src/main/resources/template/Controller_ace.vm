package ${package}.web.controller;

import ${package}.entity.${model};
import ${package}.service.${model}Service;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
<#if idType == 'String'>
import org.apache.commons.lang3.StringUtils;
</#if>
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import javax.validation.Valid;

@Api(description = "${comment}管理")
@Controller
@RequestMapping(value = "/${folder}/${variable}")
public class ${model}Controller {

  private static final String MENU = "${variable}";
  private static final String ACTION_CREATE = "create";
  private static final String ACTION_UPDATE = "update";

  @Autowired
  private ${model}Service ${variable}Service;

  @ApiOperation(value = "${comment}列表页面", httpMethod = "GET")
  @RequestMapping
  public String list(Model model) {
    model.addAttribute("menu", MENU);
    return "${folder}/${variable}/${variable}List";
  }

  @ApiOperation(value = "${comment}新增页面", httpMethod = "GET")
  @RequestMapping(value = "create", method = RequestMethod.GET)
  public String createForm(Model model) {
    model.addAttribute("menu", MENU);
    model.addAttribute("action", ACTION_CREATE);

    model.addAttribute("${variable}", new ${model}());
    return "${folder}/${variable}/${variable}Form";
  }

  @ApiOperation(value = "${comment}新增", httpMethod = "POST")
  @RequestMapping(value = "create", method = RequestMethod.POST)
  public String create(@Valid ${model} ${variable}, BindingResult result, Model model, RedirectAttributes redirectAttributes) {
    if (result.hasErrors()) {
      model.addAttribute("menu", MENU);
      model.addAttribute("action", ACTION_CREATE);

      model.addAttribute("${variable}", ${variable});

      model.addAttribute("errors", result);
      return "${folder}/${variable}/${variable}Form";
    } else
    ${variable}Service.save(${variable});

    redirectAttributes.addFlashAttribute("message", "新增${comment}成功");
    return "redirect:/${folder}/${variable}";
  }

  @ApiOperation(value = "${comment}修改页面", httpMethod = "GET")
  @RequestMapping(value = "update/{id}", method = RequestMethod.GET)
  public String updateForm(@PathVariable("id") ${idType} id, Model model) {
    model.addAttribute("menu", MENU);
    model.addAttribute("action", ACTION_UPDATE);

    model.addAttribute("${variable}", ${variable}Service.get(id));
    return "${folder}/${variable}/${variable}Form";
  }

  @ApiOperation(value = "${comment}修改", httpMethod = "POST")
  @RequestMapping(value = "update", method = RequestMethod.POST)
  public String update(@Valid @ModelAttribute("preload${model}") ${model} ${variable}, BindingResult result, Model model, RedirectAttributes redirectAttributes) {
    if (result.hasErrors()) {
      model.addAttribute("menu", MENU);
      model.addAttribute("action", ACTION_UPDATE);

      model.addAttribute("${variable}", ${variable});

      model.addAttribute("errors", result);
      return "${folder}/${variable}/${variable}Form";
    } else
    ${variable}Service.save(${variable});

    redirectAttributes.addFlashAttribute("message", "保存${comment}成功");
    return "redirect:/${folder}/${variable}";
  }

  @ModelAttribute("preload${model}")
  public ${model} get${model}(@RequestParam(value = "id", required = false) ${idType} id) {
<#if idType == 'String'>
    if (StringUtils.isNotEmpty(id)) {
<#else>
    if (id != null) {
</#if>
      return ${variable}Service.get(id);
    }
    return null;
  }

}
