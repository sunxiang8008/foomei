package ${package}.entity;

import javax.persistence.*;
import javax.validation.constraints.*;
import org.hibernate.validator.constraints.*;

import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;
import lombok.ToString;

import com.foomei.common.entity.*;

/**
 * ${comment}
 */
@Getter
@Setter
@ToString(callSuper=true)
@NoArgsConstructor
@Entity
@Table(name = "${tableName}")
@SuppressWarnings("serial")
public class ${model} extends ${idStrategy}Entity<#if hasImplement> implements ${implements}</#if> {
  <#list props?keys as k>
  public static final String PROP_${props[k]} = "${k}";
  </#list>

  <#list consts as const>
  ${const}
  </#list>
	
  <#list fields?keys as k>
  <#if fieldNotBlanks?keys?seq_contains(k)>
  @NotBlank(message = "${fieldNotBlanks[k]}不能为空")
  </#if>
  <#if fieldSizes?keys?seq_contains(k)>
  @Size(max = ${fieldSizes[k].first}, message = "${fieldSizes[k].second}最大长度为${fieldSizes[k].first}位")
  </#if>
  <#if fields[k].first == 'java.time.LocalDate'>
  @org.springframework.format.annotation.DateTimeFormat(pattern="yyyy-MM-dd")
  @Temporal(TemporalType.DATE)
  private java.util.Date ${k};//${fields[k].second}
  <#elseif fields[k].first == 'java.time.LocalDateTime'>
  private java.util.Date ${k};//${fields[k].second}
  <#else>
  private ${fields[k].first} ${k};//${fields[k].second}
  </#if>
  </#list>
  <#if hasCreateRecord>

  public boolean isCreated() {
    return id != null;
  }
  </#if>
  <#if hasDeleteRecord>

  public void markDeleted() {
    delFlag = true;
  }
  </#if>
	
}