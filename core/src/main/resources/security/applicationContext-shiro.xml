<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
       default-lazy-init="true">

    <description>Shiro安全配置</description>

    <!-- Shiro's main business-tier object for web-enabled applications -->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="authenticator" ref="authenticator"/>
        <property name="realms">
            <list>
                <ref bean="shiroPasswordRealm"/>
                <ref bean="shiroAccessRealm"/>
                <ref bean="shiroWeixinRealm"/>
                <ref bean="shiroCaptchaRealm"/>
            </list>
        </property>
        <!--将缓存管理器，交给安全管理器 -->
        <property name="cacheManager" ref="shiroSpringCacheManager"/>
        <!-- 记住密码管理 -->
        <property name="rememberMeManager" ref="rememberMeManager"/>
        <!-- 会话管理器 -->
        <property name="sessionManager" ref="sessionManager"/>
    </bean>

    <bean id="authenticator" class="com.foomei.common.security.shiro.OneModularRealmAuthenticator"/>

    <!-- 項目自定义的Realm -->
    <bean id="shiroPasswordRealm" class="com.foomei.core.service.ShiroPasswordRealm">
        <!-- 自定义配置，constructor-arg：通过构造函数注入。（ 在ShiroDbRealm的构造方法里） -->
        <!-- 用户授权信息Cache, 采用spring-cache -->
        <constructor-arg index="0" name="cacheManager" ref="shiroSpringCacheManager"/>
        <!-- 密码错误5次锁定半小时 -->
        <constructor-arg index="1" name="matcher" ref="retryLimitCredentialsMatcher"/>
        <!-- 启用身份验证缓存，即缓存AuthenticationInfo信息，默认false -->
        <property name="authenticationCachingEnabled" value="true"/>
        <!-- 指定认证缓存的名字(与 ehcache.xml 中声明的相同) -->
        <property name="authenticationCacheName" value="authenticationCache"/>
        <!-- 开启授权缓存，即缓存AuthorizationInfo信息，默认false -->
        <property name="authorizationCachingEnabled" value="true"/>
        <!-- 指定授权缓存的名字(与 ehcache.xml 中声明的相同) -->
        <property name="authorizationCacheName" value="authorizationCache"/>
    </bean>
    <bean id="shiroAccessRealm" class="com.foomei.core.service.ShiroAccessRealm">
        <constructor-arg index="0" name="cacheManager" ref="shiroSpringCacheManager"/>
        <property name="authenticationCachingEnabled" value="true"/>
        <property name="authenticationCacheName" value="authenticationCache"/>
        <property name="authorizationCachingEnabled" value="true"/>
        <property name="authorizationCacheName" value="authorizationCache"/>
    </bean>
    <bean id="shiroWeixinRealm" class="com.foomei.core.service.ShiroWeixinRealm">
        <constructor-arg index="0" name="cacheManager" ref="shiroSpringCacheManager"/>
        <property name="authenticationCachingEnabled" value="true"/>
        <property name="authenticationCacheName" value="authenticationCache"/>
        <property name="authorizationCachingEnabled" value="true"/>
        <property name="authorizationCacheName" value="authorizationCache"/>
    </bean>
    <bean id="shiroCaptchaRealm" class="com.foomei.core.service.ShiroCaptchaRealm">
        <constructor-arg index="0" name="cacheManager" ref="shiroSpringCacheManager"/>
        <property name="authenticationCachingEnabled" value="true"/>
        <property name="authenticationCacheName" value="authenticationCache"/>
        <property name="authorizationCachingEnabled" value="true"/>
        <property name="authorizationCacheName" value="authorizationCache"/>
    </bean>

    <!-- Shiro SearchFilter -->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean" lazy-init="true">
        <property name="securityManager" ref="securityManager"/>
        <property name="loginUrl" value="/login"/>
        <property name="successUrl" value="/"/>
        <property name="filters">
            <util:map>
                <entry key="authc" value-ref="authcFilter"/>
                <entry key="adminAuthc" value-ref="adminAuthcFilter"/>
                <entry key="adminUser" value-ref="adminUserFilter"/>
                <entry key="logout" value-ref="logoutFilter"/>
                <entry key="perms" value-ref="permsFilter"/>
                <entry key="roles" value-ref="rolesFilter"/>
            </util:map>
        </property>
        <property name="filterChainDefinitions">
            <value>
                /admin/login = adminAuthc
                /logout = logout
                /admin/** = adminAuthc, adminUser, roles[admin]
                /front/** = authc
                /member/** = authc
                /socket/** = anon
                /api/captcha/** = anon
                /api/user/checkLoginName = anon
                /api/retrieve = anon
                /api/config/get/** = anon
                /api/config/find/** = anon
                /api/area/** = anon
                /api/** = authc
            </value>
        </property>
    </bean>

    <bean id="adminAuthcFilter" class="com.foomei.core.web.filter.PasswordAuthenticationFilter">
        <property name="loginUrl" value="/admin/login"/>
        <property name="successUrl" value="/admin/index"/>
    </bean>
    <bean id="adminUserFilter" class="org.apache.shiro.web.filter.authc.UserFilter">
        <property name="loginUrl" value="/admin/login"/>
    </bean>

    <bean id="authcFilter" class="com.foomei.core.web.filter.PasswordAuthenticationFilter"/>
    <bean id="logoutFilter" class="com.foomei.core.web.filter.ShiroLogoutFilter"/>
    <bean id="rolesFilter" class="com.foomei.core.web.filter.ShiroRoleFilter"/>
    <bean id="permsFilter" class="com.foomei.core.web.filter.ShiroPermissionFilter"/>

    <!-- 密码错误5次锁定一小时 -->
    <bean id="retryLimitCredentialsMatcher" class="com.foomei.common.security.shiro.RetryLimitCredentialsMatcher">
        <!-- 用户授权信息Cache, 采用spring-cache -->
        <constructor-arg ref="shiroSpringCacheManager"/>
        <!-- 调用ehcache.xml文件里的cacheName -->
        <property name="retryLimitCacheName" value="passwordOneHourRetryCache"/>
        <property name="passwordHash" ref="passwordHash"/>
    </bean>

    <!-- shiro密码加密配置 -->
    <bean id="passwordHash" class="com.foomei.common.security.shiro.PasswordHash">
        <!-- 密码加密算法，增强密码可修改此处 -->
        <property name="algorithmName" value="SHA-1"/>
        <!-- 默认值是1，可省略 -->
        <property name="hashIterations" value="1024"/>
    </bean>

    <!-- 用户授权信息Cache, 采用spring-cache, 具体请查看spring-ehcache.xml、spring-redis.xml -->
    <bean id="shiroSpringCacheManager" class="com.foomei.common.security.shiro.ShiroSpringCacheManager">
        <!-- cacheManager在spring-ehcache.xml、spring-redis.xml里能找到 -->
        <property name="cacheManager" ref="cacheManager"/>
    </bean>

    <!-- rememberMe管理器,cipherKey生成见{@code Base64Test.java} -->
    <bean id="rememberMeManager" class="org.apache.shiro.web.mgt.CookieRememberMeManager">
        <!-- rememberMe cookie加密的密钥 建议每个项目都不一样 默认AES算法 密钥长度（128 256 512 位） -->
        <property name="cipherKey" value="#{T(org.apache.shiro.codec.Base64).decode('5aaC5qKm5oqA5pyvAAAAAA==')}"/>
        <!-- 记住密码Cookie -->
        <property name="cookie" ref="rememberMeCookie"/>
    </bean>

    <!-- 记住密码Cookie -->
    <bean id="rememberMeCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
        <constructor-arg value="rememberMe"/>
        <property name="httpOnly" value="true"/>
        <!-- 7天,采用spring el计算方便修改 -->
        <property name="maxAge" value="#{7 * 24 * 60 * 60}"/>
    </bean>

    <!-- 会话管理器 -->
    <bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
        <!-- 相隔多久检查一次session的有效性 -->
        <property name="sessionValidationInterval" value="#{30 * 60 * 1000}"/>
        <!-- 设置全局会话超时时间 半小时,session 有效时间为半小时 （毫秒单位） -->
        <property name="globalSessionTimeout" value="#{30 * 60 * 1000}"/>
        <!-- 是否开启 检测，默认开启 -->
        <property name="sessionValidationSchedulerEnabled" value="true"/>
        <!-- 是否删除无效的，默认也是开启 -->
        <property name="deleteInvalidSessions" value="true"/>
        <!-- url上带sessionId 默认为true -->
        <property name="sessionIdUrlRewritingEnabled" value="false"/>
        <property name="sessionIdCookie" ref="simpleCookie" />
        <property name="sessionIdCookieEnabled" value="true" />
        <property name="sessionDAO" ref="sessionDAO"/>
    </bean>

    <!-- 会话DAO 用于会话的CRUD -->
    <bean id="sessionDAO" class="org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO">
        <!-- Session缓存名字，默认就是shiro-activeSessionCache -->
        <property name="activeSessionsCacheName" value="activeSessionCache"/>
        <!-- 用户授权信息Cache, 采用spring-cache -->
        <property name="cacheManager" ref="shiroSpringCacheManager"/>
    </bean>
	
	<!-- 会话Cookie模板 -->  
    <bean id="simpleCookie" class="org.apache.shiro.web.servlet.SimpleCookie">  
        <constructor-arg name="name" value="shiro.sesssion"/>  
        <property name="path" value="/"/>  
    </bean>

    <!-- 生命周期 -->
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>

    <!-- 方法注解权限检查  -->
    <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" depends-on="lifecycleBeanPostProcessor">
        <property name="proxyTargetClass" value="true"/>
    </bean>

    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager"/>
    </bean>

    <!-- 在方法中 注入 securityManager ，进行代理控制 -->
    <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="staticMethod" value="org.apache.shiro.SecurityUtils.setSecurityManager"/>
        <property name="arguments" ref="securityManager"/>
    </bean>
</beans>