<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
       default-lazy-init="true">

    <description>Shiro安全配置</description>

    <!-- Shiro's main business-tier object for web-enabled applications -->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="authenticator" ref="authenticator"/>
        <property name="realms">
            <list>
                <ref bean="shiroPasswordRealm"/>
                <ref bean="shiroAccessRealm"/>
                <ref bean="shiroWeixinRealm"/>
                <ref bean="shiroCaptchaRealm"/>
            </list>
        </property>
        <property name="cacheManager" ref="shiroEhcacheManager"/>
		<property name="sessionManager" ref="sessionManager" />
		<property name="rememberMeManager" ref="rememberMeManager"/>  
    </bean>

    <bean id="authenticator" class="com.foomei.common.security.shiro.OneModularRealmAuthenticator"/>

    <!-- 項目自定义的Realm -->
    <bean id="shiroPasswordRealm" class="com.foomei.core.service.ShiroPasswordRealm">
        <property name="userService" ref="userService"/>
    </bean>
    <bean id="shiroAccessRealm" class="com.foomei.core.service.ShiroAccessRealm">
        <property name="userService" ref="userService"/>
        <property name="tokenService" ref="tokenService"/>
    </bean>
    <bean id="shiroWeixinRealm" class="com.foomei.core.service.ShiroWeixinRealm">
        <property name="userService" ref="userService"/>
    </bean>
    <bean id="shiroCaptchaRealm" class="com.foomei.core.service.ShiroCaptchaRealm">
        <property name="userService" ref="userService"/>
    </bean>

    <!-- Shiro SearchFilter -->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean" lazy-init="true">
        <property name="securityManager" ref="securityManager"/>
        <property name="loginUrl" value="/login"/>
        <property name="successUrl" value="/"/>
        <property name="filters">
            <util:map>
                <entry key="authc" value-ref="authcFilter"/>
                <entry key="adminAuthc" value-ref="adminAuthcFilter"/>
                <entry key="adminUser" value-ref="adminUserFilter"/>
                <entry key="logout" value-ref="logoutFilter"/>
                <entry key="perms" value-ref="permsFilter"/>
                <entry key="roles" value-ref="rolesFilter"/>
            </util:map>
        </property>
        <property name="filterChainDefinitions">
            <value>
                /admin/login = adminAuthc
                /logout = logout
                /admin/** = adminAuthc, adminUser, roles[admin]
                /front/** = authc
                /member/** = authc
                /socket/** = anon
                /api/captcha/** = anon
                /api/user/checkLoginName = anon
                /api/retrieve = anon
                /api/config/get/** = anon
                /api/config/find/** = anon
                /api/area/** = anon
                /api/** = authc
            </value>
        </property>
    </bean>

    <bean id="adminAuthcFilter" class="com.foomei.core.web.filter.PasswordAuthenticationFilter">
        <property name="loginUrl" value="/admin/login"/>
        <property name="successUrl" value="/admin/index"/>
    </bean>
    <bean id="adminUserFilter" class="org.apache.shiro.web.filter.authc.UserFilter">
        <property name="loginUrl" value="/admin/login"/>
    </bean>

    <bean id="authcFilter" class="com.foomei.core.web.filter.PasswordAuthenticationFilter"/>
    <bean id="logoutFilter" class="com.foomei.core.web.filter.ShiroLogoutFilter"/>
    <bean id="rolesFilter" class="com.foomei.core.web.filter.ShiroRoleFilter"/>
    <bean id="permsFilter" class="com.foomei.core.web.filter.ShiroPermissionFilter"/>

    <!-- 用户授权信息Cache, 采用EhCache -->
    <bean id="shiroEhcacheManager" class="com.foomei.common.security.shiro.EhCacheManager">
        <property name="cacheManagerConfigFile" value="classpath:security/ehcache-shiro.xml"/>
    </bean>
    
	<bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
        <property name="sessionDAO" ref="sessionDAO" />  
        <!-- 会话超时时间，单位：毫秒 -->  
        <property name="globalSessionTimeout" value="1800000" />  
        <!-- 定时清理失效会话, 清理用户直接关闭浏览器造成的孤立会话 -->  
        <property name="sessionValidationInterval" value="1800000" />  
        <property name="sessionIdCookie" ref="simpleCookie" />  
        <property name="sessionIdCookieEnabled" value="true" />  
	</bean>
	
	<bean id="sessionDAO" class="org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO">
		<property name="cacheManager" ref="shiroEhcacheManager" />
	</bean>
	
	<!-- 会话Cookie模板 -->  
    <bean id="simpleCookie" class="org.apache.shiro.web.servlet.SimpleCookie">  
        <constructor-arg name="name" value="shiro.sesssion"/>  
        <property name="path" value="/"/>  
    </bean>  
  
    <bean id="rememberMeCookie" class="org.apache.shiro.web.servlet.SimpleCookie">  
        <constructor-arg value="rememberMe"/>  
        <property name="httpOnly" value="true"/>  
        <property name="maxAge" value="604800"/><!-- 7天 -->  
    </bean>  
  
    <!-- rememberMe管理器 -->  
    <bean id="rememberMeManager" class="org.apache.shiro.web.mgt.CookieRememberMeManager">  
        <property name="cipherKey" value="#{T(org.apache.shiro.codec.Base64).decode('4AvVhmFLUs0KTA3Kprsdag==')}"/>  
        <property name="cookie" ref="rememberMeCookie"/>  
    </bean>  

    <!-- 保证实现了Shiro内部lifecycle函数的bean执行 -->
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>

    <!-- AOP式方法级权限检查  -->
    <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" depends-on="lifecycleBeanPostProcessor">
        <property name="proxyTargetClass" value="true"/>
    </bean>

    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager"/>
    </bean>
</beans>